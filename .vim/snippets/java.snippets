snippet main
	public static void main(String[] args){
		${1}
	}
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 
snippet sy
	synchronized
snippet im
	import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1})
snippet el
	else 
snippet elif
	else if (${1}) 
snippet wh
	while (${1}) ${2}
snippet for
	for (${1}; ${2}; ${3}) ${4}
snippet fore
	for (${1} : ${2}) ${3}
snippet sw
	switch (${1}) ${2}
snippet cs
	case ${1}:
	{
		${2}
	}
	break;
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	public class ${1:`Filename("", "untitled")`} {
		${2}
	}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
#File: java.snippets
#Author: lxw
#Time: 2013-12-28
#Usage: Module Docstring
snippet docs
	//File: `Filename('$1.java')`
	//Author: lxw
	//Time: `system("date +%Y-%m-%d")`
	//Usage: ${1}
	//Changes:

#Time: 2014-05-10
#Usage: print
snippet print
	System.out.println(${1});
#Time: 2014-06-22
#Usage: try...catch
snippet try
	try {
		${1}
	} catch(Exception e) {
		${2}
	} finally {
		${3}
	}
